

// 密码与信息安全常识

// 1. 不要使用保密的算法
我们不应该使用或制作任何保密的算法。而是使用那些公开的，被公认为强度较高的密码算法

要比较加密算法的强弱是十分困难的。密码算法的强弱只能通过事实来证明。如果专业破译者经过多年
都没能破解加密算法。则说明这种算法是高强度的


// 2. 使用低强度的密码，比不加密更危险
用户容易通过 "密码" 这个词，获得错误的安全感。这种安全感会导致人们处理重要信息的时候麻痹大意


// 3. 任何密码总有一天会被破解
无论使用何种密码算法，只要将所有密钥都试一遍，总有一天可以破解出来。


// 4. 密码只是信息安全的一部分
即便不去破解密码，我们也有很多方法可以获取明文的内容。
社会工程学告诉我们，最脆弱的环节不是密码，而是人类自己



// 密码
a 向 b 发送 邮件时，邮件会在多台服务器和通信设备之间中转。在这个过程中就存在被 窃听 的可能


// 加密 encrpty
// 加密前的消息 -- 明文
// 加密后的消息 -- 密文
a为了防止被窃听，决定对邮件进行加密。



// 解密 decrpty
b收到a的邮件，但无法直接阅读 密文。需要对邮件解密，将密文恢复成明文


// 密码
密码技术提供的不仅仅是基于密码的机密性。用户检验消息是否被篡改的完整性，以及用于
确认对方是否是本人的认证都是密码技术的重要组成部分。


// 破译
c 窃听到了 加密的邮件。为了阅读邮件，必须试图将密文还原为明文


// 算法 algorithm
用于解决复杂问题的步骤，通常称为算法
从明文生成密文的步骤，也就是加密的步骤，被称为加密算法


// 密钥 key
密码算法中需要密钥。密码算法中的密钥是一长串数字


// 对称密码 symmetric cryptography
对称密码是指在 加密 和 解密 时 使用同一把密钥 的方式


// 非对称密码 asymmetric cryptography -- 公钥密钥
非对称密码是指在 加密 和 解密 时 使用不同密钥 的方式。

// tips
非对称密码是在20世纪70年代出现的，在密码学界引发了一场大变革。
现代互联网的安全体系，很大程度上依赖非对称加密


// 单向散列函数 one-way-hash-function  
// 又称为 消息摘要函数  message digest function 或哈希函数 
为了防止 软件被篡改，有安全意识的发布者会同时发布软件的单向散列值。
散列值 hash value 就是 输入 消息 message 用 单向散列函数 计算出来的值

不论输入的视频，图片，文字。单向散列函数都会将它作为比特序列来处理。



//  散列值又称哈希值 消息摘要
散列值的长度和消息长度无关。以sha1为例，它计算出的散列值长度固定为160比特。

散列值的长度很短，可以很方便的测试几百MB文件的完整性。

计算散列值的时间必须很短。

消息不同，散列值必须不同。两个不同消息，产生相同的散列值，被称为碰撞。
难以产生碰撞的的性质，被称为抗碰撞值

单向散列函数必须具备单向性。即无法通过散列值，计算出消息的具体内容


下载软件的人可以自行计算散列值。如果散列值和发布的一致，则软件没有被篡改。


// 消息的完整性
单向散列函数保证的并不是文件的 机密性。 而是消息的 完整性。



// 常见的 单向散列函数   MD就是 message degist
MD4 MD5 SHA-1 SHA-256 SHA-384 SHA-512



// 消息的认证
指消息来自正确的发送者



// 消息认证码 MAC message authentication code
和单向散列函数一样，但是需要加入一个公共密钥，对比双方生成的消息认证码，如果一致，则通过。





 
a 收到了 b 的邮件。内容是 b 愿意请 a 吃海底捞。如何判断邮件确实来自 b？

// 假设b真的发了邮件
但是 b原本写的吃麻辣烫，被人改成了 吃海底捞。

// b的确发了邮件，内容也没被篡改
但是 b 反悔了。不想请a吃饭了。这种事后推翻先前主张的行为称为 否认



// 数字签名 digital signature
数字签名是	将现实中的盖章和签名移植到数字世界中 的一种技术






// 历史上的密码算法

// 凯撒密码 
通过字母的平移对明文加密的过程就是 加密算法。而平移字母的数量就是 密钥
由于只有26个字母，因此加密的密钥只有26种



// 暴力破解  brute-force-attack   又称为 穷举搜索 exhaustive search
将所有密钥都尝试一遍


// 密钥空间 kyespace
一种密码能够使用的 所有密钥的集合 被称为 密钥空间。 密钥空间越大，暴力破解就越难


// 简单替换	simple substitution cipher
将明文中所使用的字母表替换为另一套字母表的密码被称为 简单替换。


// 频率分析
首先统计一下明文中每个字母出现的次数。
英文文章中出现频率最高的是字母e
尝试将出现最多的字母替换为e。

// 除了高频字母，低频字母也能成为线索
// 密文越长，越容易破译
// 同一个连续出现，能够成为线索
// 搞清楚开头和结尾，能够成为线索


// 密钥加密密钥  key encrypting key  KEK
双重加密，是因为同一个密钥加密的文件越来越多，被破解的可能就越大




// 比特序列
计算机的操作对象并不是文字，而是由0和1组成的比特序列。
无论文字，图像，视频在计算机中都是用比特序列来表示。



// 编码
将现实世界中的东西映射为比特序列的操作被称为 编码。


// XOR 异或   XOR和加法很像
// 将 0 理解为偶数，1 理解为奇数
0 XOR 0 = 0;
0 XOR 1 = 1;
1 XOR 0 = 1;
1 XOR 1 = 0;



// AES advanced encryption standard 是取代DES的一种新对称加密算法。



// 分组密码	block cipher
是每次只能处理一定长度的数据的一类算法。DES的分组长度是64比特。AES可以从128，256中选择


// 流密码 stream cipher	 赛菲尔
是对数据流进行连续处理的一类密码算法。一般以1比特，8比特，32比特为单位




// Mallory  主动攻击者   麦乐瑞
Mallory可以主动介入发送者和接受者之间的通信过程，阻碍通信或者篡改密文等



// 非对称加密
对称加密中必须向接收者配送钥匙，这一问题被称为密钥配送问题。
非对称加密，则无需像接收者配送钥匙。
加密密钥 public key  一般是公开的，
解密密钥 private key  则由接收者保管。


// 公钥和私钥
公钥和私钥是一一配对的，一对公钥和私钥被称为密钥对 key pair



// 公钥认证问题
非对称加密解决了 密钥配送问题。但没有解决所有问题。
我们需要判断得到的公钥是否合法，被称为	公钥认证问题
公钥加密的处理速度只有私钥加密的几百分之一



// 公钥证书	public key certificate PKC
要开车，先要有驾照，驾照上要有公安局的章。
公钥证书上姓名，组织，邮箱等信息，在认证机构注册自己的公钥，并由认证机构添加数字签名。
认证机构必须是可信的第三方。


// 认证机构 CA certification authority
是对证据进行管理的人。认证机构可以进行如下操作：
生成密钥对。在注册公钥时，对本人身份进行认证。生成并颁布证书。作废证书




// RSA 
最广泛的公钥算法。由它的三位发明者的首字母命名



// 中间人攻击   man-in-the-middle attack
是指Mallory对发送者伪装成接收者，对接收者伪装成发送者。
算法不需要破译，但消息的机密性却难以保证


// 公钥证书




// 公钥密码的机密性比私钥密码更高吗？
这个问题无法回答。因为机密性的高低是根据密钥长度而变化的。





// 网络通信的三大难题
// 机密性  完整性  认证问题
// HTTP + 机密性 + 完整性 + 认证 = HTTPS

机密性 可以使用对称加密
完整性 可以使用消息认证码，消息认证码是使用单向散列函数实现的
认证   可以使用对公钥加上签名的数字证书

将这些工具整合起来的就是SSL/TLS 协议


// SSL/TLS   secure socket layer	transport layer security
提供了一种密码通信的框架，使用了对称加密，非对称加密，数字签名，单向散列函数等技术。